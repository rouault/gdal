# build GDAL library and to run test with CMake

name: Build and test with CMake

on:
    push:
        paths-ignore:
            - 'doc/**'
        branches-ignore:
            - 'backport**'
    pull_request:
        paths-ignore:
            - 'doc/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  CMAKE_UNITY_BUILD: OFF

permissions:
  contents: read  #  to fetch code (actions/checkout)

jobs:

  build-windows-msys2-mingw:
    runs-on: windows-2022
    env:
      generator: MinGW Makefiles
      cache-name: cmake-mingw64
    defaults:
      run:
        shell: msys2 {0}
    steps:
      # To avoid git clone to mess with the line endings of GDAL autotest data
      # files that look like text, but should be handled as binary content
      - name: Set git core.autocrlf to false
        shell: bash -l {0}
        run: |
          git config --global core.autocrlf false
      - name: Checkout GDAL
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Install development packages
        uses: msys2/setup-msys2@cc11e9188b693c2b100158c3322424c4cc1dadea # v2.22.0
        with:
          msystem: MINGW64
          update: true
          # Disable mingw-w64-x86_64-crypto++ as it crashes at runtime on eedai_3 test. Likely a build issue with crypto++ itself
          install: |
            base-devel git mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-ccache
            mingw-w64-x86_64-pcre mingw-w64-x86_64-xerces-c mingw-w64-x86_64-zstd mingw-w64-x86_64-libarchive
            mingw-w64-x86_64-geos mingw-w64-x86_64-libspatialite mingw-w64-x86_64-proj
            mingw-w64-x86_64-cgal mingw-w64-x86_64-libfreexl mingw-w64-x86_64-hdf5 mingw-w64-x86_64-netcdf mingw-w64-x86_64-poppler mingw-w64-x86_64-postgresql
            mingw-w64-x86_64-libgeotiff mingw-w64-x86_64-libpng mingw-w64-x86_64-libtiff mingw-w64-x86_64-openjpeg2
            mingw-w64-x86_64-python-pip mingw-w64-x86_64-python-numpy mingw-w64-x86_64-python-pytest mingw-w64-x86_64-python-setuptools mingw-w64-x86_64-python-lxml mingw-w64-x86_64-swig mingw-w64-x86_64-python-psutil mingw-w64-x86_64-blosc
      - name: Setup cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        id: cache
        with:
          path: ${{ github.workspace }}\.ccache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.base_ref }}${{ github.ref_name }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ github.base_ref }}
            ${{ runner.os }}-${{ env.cache-name }}
      - name: Configure ccache
        run: |
          echo CCACHE_BASEDIR=$PWD >> ${GITHUB_ENV}
          echo CCACHE_DIR=$PWD/.ccache >> ${GITHUB_ENV}
          echo CCACHE_MAXSIZE=250M >> ${GITHUB_ENV}
          ccache -z
        working-directory: ${{ github.workspace }}
      - name: populate JAVA_HOME
        run: |
          echo "JAVA_HOME=$JAVA_HOME_11_X64" >> ${GITHUB_ENV}
      - name: Install python dependencies for autotest
        run: |
          # One of the dependencies of jsonschema 4.18 is rpds_py which requires a Rust compiler
          python -m pip install "jsonschema<4.18"
          python -m pip install -r autotest/requirements.txt
      # Disable mySQL since C:/mysql/lib/mysqlclient.lib (unrelated to msys) is found, which causes linking issues
      # Set explicitly CMAKE_C|CXX_COMPILER otherwise C:/ProgramData/chocolatey/bin/gcc.exe would be used
      - name: Configure
        run: |
          cmake -S . -B build -G "${generator}" -Werror=dev \
            -DCMAKE_BUILD_TYPE=release \
            -DCMAKE_C_FLAGS=-Werror \
            -DCMAKE_CXX_FLAGS=-Werror \
            -DWERROR_DEV_FLAG=-Werror=dev \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_PREFIX_PATH=/mingw64 \
            -DCMAKE_INSTALL_PREFIX=$PWD/install-gdal \
            "-DCMAKE_UNITY_BUILD=${CMAKE_UNITY_BUILD}" \
            -DGDAL_USE_MYSQL:BOOL=OFF
        working-directory: ${{ github.workspace }}
      - name: Build
        run: cmake --build build -j 3
        working-directory: ${{ github.workspace }}
      - name: test
        run: cmake --build build --target quicktest
        working-directory: ${{ github.workspace }}
      - name: test (with ctest)
        run: |
          ctest --test-dir $GITHUB_WORKSPACE/build -C Release -V -j 3
        env:
          BUILD_NAME: mingw64
          SKIP_OGR_GMLAS_HUGE_PROCESSING_TIME: YES
          SKIP_OGR_GMLAS_HTTP_RELATED: YES
          SKIP_TIFF_JPEG12: YES
          SKIP_VSIRAR: YES
        working-directory: ${{ github.workspace }}
      - name: Install
        run: cmake --build build --target install -j 3
        working-directory: ${{ github.workspace }}
      - name: Test post-install usage (with pkg-config)
        run: ./autotest/postinstall/test_pkg-config.sh $PWD/install-gdal
        working-directory: ${{ github.workspace }}
      - name: ccache statistics
        run: ccache -s
