# build GDAL library and to run test with CMake

name: Build and test with CMake

on:
    push:
        paths-ignore:
            - 'doc/**'
    pull_request:
        paths-ignore:
            - 'doc/**'

env:
  CMAKE_UNITY_BUILD: OFF

jobs:

  build-windows-conda:
    runs-on: windows-latest
    env:
        architecture: x64
        generator: Visual Studio 16 2019
        JAVA_HOME: "C:\\Program Files\\Java\\zulu-11-azure-jdk_11.33.15-11.0.4-win_x64"
    steps:
    # To avoid git clone to mess with the line endings of GDAL autotest data
    # files that look like text, but should be handled as binary content
    - name: Set git core.autocrlf to false
      run: |
        git config --global core.autocrlf false
    - name: Checkout GDAL
      uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: gdalenv
        python-version: 3.7
        channels: conda-forge
    - run: |
        cmake --version
    - name: Install dependency
      shell: bash -l {0}
      run: |
        conda install --yes --quiet --name gdalenv curl libiconv icu python=3.7 swig numpy pytest pytest-env zlib clcache lxml
        conda install --yes --quiet --name gdalenv -c conda-forge proj geos hdf4 hdf5 kealib \
            libnetcdf openjpeg poppler libtiff libpng xerces-c expat libxml2 kealib json-c \
            cfitsio freexl geotiff jpeg libpq libspatialite libwebp-base pcre pcre2 postgresql \
            sqlite tiledb zstd charls cryptopp cgal jasper doxygen librttopo libkml openssl xz \
            openjdk ant qhull armadillo blas blas-devel libblas libcblas liblapack liblapacke
        cd $CONDA_PREFIX/Library/share/proj
        curl http://download.osgeo.org/proj/proj-datumgrid-1.8.tar.gz > proj-datumgrid-1.8.tar.gz
        tar xvzf proj-datumgrid-1.8.tar.gz
        cd $OLDPWD
    - name: Configure
      shell: bash -l {0}
      # FIXME: Jasper manually disabled because of linking errors: lacks jp2_box_destroy
      # Disable MySQL because of "error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1900' in ogrmysqldatasource.obj" and other errors
      # Disable LIBKML because of issue at linking time with kmlXXXX.lib being debug libraries
      # Note that the leading space in CMAKE_C/CXX_FLAGS=" /WX" is due to using Bash on Windows that would
      # otherwise interpret /bla has a file relative to the Bash root directory and would replace it by a path like c:\Program Files\git\WX
      # BUILD_JAVA_BINDINGS=OFF because we get "Error occurred during initialization of VM.   Corrupted ZIP library: C:\Miniconda\envs\gdalenv\Library\bin\zip.dll" when running java. Not reproducible on a standard VM
      run: |
        mkdir -p $GITHUB_WORKSPACE/build
        cmake -A ${architecture} -G "${generator}" "-DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install-gdal" "-DCMAKE_C_COMPILER_LAUNCHER=clcache" "-DCMAKE_CXX_COMPILER_LAUNCHER=clcache" "-DCMAKE_PREFIX_PATH=${CONDA_PREFIX}" -DCMAKE_UNITY_BUILD=${CMAKE_UNITY_BUILD} -S "$GITHUB_WORKSPACE" -B "$GITHUB_WORKSPACE/build" -DJASPER_LIBRARY_RELEASE:FILEPATH= -DLIBKML_BASE_LIBRARY:FILEPATH= -DGDAL_ENABLE_PLUGINS:BOOL=ON -DGDAL_ENABLE_PLUGINS_NO_DEPS:BOOL=ON -DGDAL_USE_PUBLICDECOMPWT:BOOL=ON -DBUILD_JAVA_BINDINGS=OFF -DBUILD_CSHARP_BINDINGS=ON -DGDAL_USE_MYSQL:BOOL=OFF -DCMAKE_C_FLAGS=" /WX" -DCMAKE_CXX_FLAGS=" /WX"
    - name: Build
      shell: bash -l {0}
      run: cmake --build $GITHUB_WORKSPACE/build --config Release -j 2
    - name: test
      shell: bash -l {0}
      run: |
        cmake --build $GITHUB_WORKSPACE/build --config Release --target quicktest
    - name: test (with ctest)
      shell: bash -l {0}
      run: |
        ctest --test-dir $GITHUB_WORKSPACE/build -C Release -V -j 3
      env:
        SKIP_OGR_GMLAS_HUGE_PROCESSING_TIME: YES
    - name: Install
      shell: bash -l {0}
      run: |
        cmake --build $GITHUB_WORKSPACE/build --config Release --target install
        export PATH=$GITHUB_WORKSPACE/install-gdal/bin:$PATH
        gdalinfo --version
        PYTHONPATH=$GITHUB_WORKSPACE/install-gdal/lib/site-packages python3 -c "from osgeo import gdal;print(gdal.VersionInfo(None))"
